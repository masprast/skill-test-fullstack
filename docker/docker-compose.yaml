version: '3.1'

services:
  # mongo_replica:
  #   container_name: mongo_replica
  #   image: mongo:7.0.1
  #   restart: always
  #   volumes:
  #     - replica:/data/db
  #   expose:
  #     - '27017'
  #   entrypoint: ['/usr/bin/mongod','--replSet','rsmongo','--bind_ip_all']

  mongodb:
    container_name: mongodb
    # image: mongodb/mongodb-community-server:7.0.1-ubi8
    image: mongo:7.0.1
    # image: prismagraphql/mongo-single-replica
    restart: always
    ports:
      - 27017:27017
    env_file:
      - ./docker.env
    # healthcheck:
    #   # Use "mongo" instead of "mongosh" before v5.0
    #   test: ['CMD', 'mongosh', 'admin', '--port', '27017', '--eval', "db.adminCommand('ping').ok"]
    #   interval: 5s
    #   timeout: 2s
    #   retries: 20
    #   start_period: 20s
    volumes:
      - ./../backend/db/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh:ro
      - datadb:/data/db
    # command: --replSet rs0
    # depends_on:
    #   - mongodb_replica

  # mongodb_replica:
  #   container_name: mongodb_replica
  #   build:
  #     context: ./mongodb_replica
  #     args:
  #       MONGO_VERSION: 7.0.1
  #   environment:
  #     MONGO_REPLICA_HOST: 127.0.0.1
  #     MONGO_REPLICA_PORT: 27018
  #     # Use "mongo" instead of "mongosh" before v5.0
  #     MONGO_COMMAND: 'mongosh'
  #   ports:
  #     - '27018:27018'
  #   restart: unless-stopped
  #   healthcheck:
  #     # Use "mongo" instead of "mongosh" before v5.0
  #     test: ['CMD', 'mongosh', 'admin', '--port', '27018', '--eval', "db.adminCommand('ping').ok"]
  #     interval: 5s
  #     timeout: 2s
  #     retries: 20

volumes:
  datadb:
  # replica:
